@model IEnumerable<DatabaseAccess.Database.Book>
@using Microsoft.AspNetCore.Http;

@{
	ViewData["Title"] = "List";
	string alertClass = "alert-danger";
	if (ViewBag.Success == true)
		alertClass = "alert-success";

	bool userIsLogged = User.Identity.IsAuthenticated;
}

<div class="d-flex justify-content-between">
	<div>
		<h1>List of books</h1>

	</div>
	@{
		if (userIsLogged)
		{
			<div>
				<form>
					<a class="btn btn-outline-primary mr-1" asp-action="Create">Create new book</a>
				</form>
			</div>
		}
	}

</div>



@if (ViewBag.Message != null)
{
	<div class="alert @alertClass alert-dismissible fade show" role="alert">
		@ViewBag.Message
		<button type="button" class="close" data-dismiss="alert" aria-label="Close">
			<span aria-hidden="true">&times;</span>
		</button>
	</div>
}

<table class="table">
	<thead>
		<tr>
			<th style="width:15%;">
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th style="width:15%;">
				@Html.DisplayNameFor(model => model.Author)
			</th>
			<th style="width:5%;">
				@Html.DisplayNameFor(model => model.PublishDate)
			</th>
			<th style="width:50%;">
				@Html.DisplayNameFor(model => model.Description)
			</th>
			<th style="width:15%;">

			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Title)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Author)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PublishDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Description)
				</td>
				<td>
					@{
						if (userIsLogged)
						{
							<form>
								<a class="btn btn-outline-success mr-1" asp-action="RequestBook" asp-route-id="@item.BookID">Request</a>
								<a class="btn btn-outline-warning mr-1" asp-action="Edit" asp-route-id="@item.BookID">Edit</a>
								<a class="btn btn-outline-info mr-1" asp-action="Reservations" asp-route-id="@item.BookID"> Reservations </a>
							</form>
						}
					}
				</td>
			</tr>
		}
	</tbody>
</table>
